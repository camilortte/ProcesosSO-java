/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author camilortte
 */
public class VentanaMemoria extends javax.swing.JFrame {

    /**
     * Creates new form VentanaMemoria
     */
    
    private ArrayList<String> memoriaPrincipal;
    private ArrayList<String> memoriaVirtual;
    private boolean draw = true;
    
    public VentanaMemoria(ArrayList<String> memoriaPrincipal,ArrayList<String> memoriaVirtual) {
        initComponents();
        this.memoriaPrincipal=memoriaPrincipal;
        this.memoriaVirtual=memoriaVirtual;
        dibujarMemoria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Memoria");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentResized(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentResized(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setText("Memoria Principal");

        jLabel2.setText("Memoria Virtual");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(192, 192, 192)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(93, 93, 93))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        dibujarMemoria();
        
    }//GEN-LAST:event_formFocusGained

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
         dibujarMemoria();
    }//GEN-LAST:event_formComponentShown

    private void formComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentMoved
        dibujarMemoria();
    }//GEN-LAST:event_formComponentMoved

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        dibujarMemoria();
    }//GEN-LAST:event_formComponentResized

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        dibujarMemoria();
    }//GEN-LAST:event_formComponentHidden

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        dibujarMemoria();
    }//GEN-LAST:event_formWindowActivated

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        dibujarMemoria();
    }//GEN-LAST:event_formWindowStateChanged

    private void jPanel1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentResized
        dibujarMemoria();
    }//GEN-LAST:event_jPanel1ComponentResized

    private void jPanel2ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentResized
        dibujarMemoria();
    }//GEN-LAST:event_jPanel2ComponentResized

    public void paintComponent(Graphics g) {
       dibujarMemoria();
    }

  
    
    public void clear(){
        if(this.isVisible()){
            jPanel1.removeAll();
            jPanel2.removeAll();
            dibujarMemoria();
        }
    }
    
    
    
    public void dibujarMemoria(){  
      this.update(this.getGraphics());
      this.paint(this.getGraphics());
      dibujoMemoriaPrincipal();
      dibujoMemoriaVirtual();
    }
    
    private void dibujoMemoriaPrincipal(){
          int alto=this.jPanel1.getHeight();
        int ancho=this.jPanel1.getWidth();
        Double espacios_alto=(alto+0.0-5)/memoriaPrincipal.size();
        Double espacios_ancho=(ancho+0.0-1);
        int x1=0,y1=0;
        int x2=(int)Math.round(espacios_ancho);
        int y2=(int)Math.round(espacios_alto);
        //jPanel1.getGraphics().setColor(new Color(0,102,255));
        //jPanel1.getGraphics().setColor(new Color(255,255,255));
        Graphics g=jPanel1.getGraphics();
        System.out.println("\nMemoria Princiapl");
        for(int i=0;i<memoriaPrincipal.size();i++){            
            System.out.print(memoriaPrincipal.get(i)+" ");
            if(memoriaPrincipal.get(i)==null){
                g.setColor(Color.BLACK);
                g.drawRect(x1,y1,x2,y2);                
                //System.out.println("Se dibujo vacio inicia en "+x1+","+y1+" Termina en "+x2+","+y2);
            }else{
                //System.out.println("Se dibujo lleno inicia en "+x1+","+y1+" Termina en "+x2+","+y2);
                g.setColor(Color.BLUE);
                g.fillRect(x1,y1,x2,y2);
                g.setColor(Color.WHITE);
                g.drawString(memoriaPrincipal.get(i), x1, y1+(int)Math.round(espacios_alto));
                g.setColor(Color.BLACK);
                g.drawRect(x1,y1,x2,y2);
            }
            y1+=(int)Math.round(espacios_alto);
            y2=(int)Math.round(espacios_alto);
        }
    }
    
    private void dibujoMemoriaVirtual(){
        int alto=this.jPanel2.getHeight();
        int ancho=this.jPanel2.getWidth();
        Double espacios_alto=(alto+0.0-5)/memoriaVirtual.size();
        Double espacios_ancho=(ancho+0.0-1);
        int x1=0,y1=0;
        int x2=(int)Math.round(espacios_ancho);
        int y2=(int)Math.round(espacios_alto);
        //jPanel1.getGraphics().setColor(new Color(0,102,255));
        //jPanel1.getGraphics().setColor(new Color(255,255,255));
        Graphics g=jPanel2.getGraphics();
        System.out.println("\nMemoria Virtual");
        for(int i=0;i<memoriaVirtual.size();i++){            
            System.out.print(memoriaVirtual.get(i));
            if(memoriaVirtual.get(i)==null){
                g.setColor(Color.BLACK);
                g.drawRect(x1,y1,x2,y2);                
                //System.out.println("Se dibujo vacio inicia en "+x1+","+y1+" Termina en "+x2+","+y2);
            }else{
                //System.out.println("Se dibujo lleno inicia en "+x1+","+y1+" Termina en "+x2+","+y2);
                g.setColor(Color.BLUE);
                g.fillRect(x1,y1,x2,y2);
                g.setColor(Color.WHITE);
                g.drawString(memoriaVirtual.get(i), x1, y1+(int)Math.round(espacios_alto));
                g.setColor(Color.BLACK);
                g.drawRect(x1,y1,x2,y2);
            }
            y1+=(int)Math.round(espacios_alto);
            y2=(int)Math.round(espacios_alto);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    void setMemoriaPrincipal(ArrayList<String> memoriaPrincipal) {
        this.memoriaPrincipal=memoriaPrincipal;
    }

    void setMemoriaVirtual(ArrayList<String> memoriaVirtual) {
        this.memoriaVirtual=memoriaVirtual;
    }
}
